# Kafka broker configs
# Broker là Apache kafka server, c?u n?i gi?a Publisher và Consumer
# Cluster là group các Broker
spring.kafka.bootstrap-servers=localhost:9092
# Xác ??nh s? l??ng các b?n sao c?a m?t topic s? ???c t?o ra trên các broker
spring.kafka.topic.replication-factor=1
# Xác ??nh b?ng s? l??ng broker trong cluster, default = 1
spring.kafka.topic.num-partition=1
# Có 3 giá tr? cho c?u hình này : '0', '1', 'all'
# V?i '1' : producer không c?n xác nh?n c?a broker, m?c ??nh là message ?ã g?i là g?i thành công => d? m?t mát d? li?u , ??i l?i ?ây là tùy ch?n có ph?n h?i nhanh nh?t
# V?i '2' : producer xác nh?n c?a broker leader, tuy nhiên v?n không ??m b?o ???c các consumer ?ã nh?n ?c h?t message => d? m?t mát d? li?u
# V?i 'all' : producer c?n xác nh?n c?a t?t c? các broker => an toàn,không b? m?t message, không m?t mát d? li?u, ??i l?i m?t th?i gian ?? producer nh?n ???c t?t c? các xác nh?n t? các broker
spring.kafka.producer.acks=all
# S? l?n th? l?i n?u g?i message th?t b?i do m?t m?ng ho?c l?i server ( n?u broker không ACK ?? xác nh?n r?ng tin nh?n ?ã ???c nh?n và x? lý thành công c?ng ???c coi là tin nh?n ch?a ?c g?i )
spring.kafka.producer.retries=10
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
# Schema registry là m?t service qu?n lý schema c?a các message , các message s? ???c serialize và deserialize gi?a các ?ng d?ng do các message ph?i ???c bi?u di?n d??i d?ng byte, m?t s? ??nh d?ng ?? serialization nh? Avro, JSON, protobuf
spring.kafka.producer.properties.schema.registry.url=http://localhost:8889
# Serialize message thành ki?u byte s? d?ng arvo
# V?i specific avro ta ph?i t? ??nh ngh?a c?u trúc c?a message còn generic avro thì s? t? ??ng l?y c?u trúc c?a obj mu?n ??a vào message
#spring.kafka.producer.properties.specific.avro.reader=true
spring.kafka.producer.properties.generic.avro.reader=true
spring.kafka.producer.template.default-topic=common_topic

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/learning?useSSL=false&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=
spring.datasource.dbcp2.test-while-idle=true
spring.datasource.dbcp2.validation-query=SELECT 1
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# Hibernate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379